<%

  if (typeof(table_positions) != undefined) {

    var stub = table_positions.stub;
    var griddata = table_positions.griddata;

  }

%>
<style type="text/css">
.red {
    color: #BB0000;
}

.green {
    color: #008800;
}

</style>
<div id="positionsgrid" style="margin-bottom: 10px;"></div>
<script src="/scripts/notifications.js"></script>
<script src="/scripts/api.js"></script>

<script type="text/javascript">

  $(document).ready(function () {
      

    function getGridData() {
        var token = null;
        if (localStorage) {
          var token = localStorage.getItem("token");
          if (token != null) {
            var token = JSON.parse(token);
          }
        }
        var params = {};
        if (token != null) {
            params['token'] = token;
        }
        params['stub'] = $("#positionsstub").val();
        var result = [];
        jQuery.ajax({
          url: "/ui/data/griddata_positions",
          method: 'GET',
          data: params,
          success: function(json) {
            console.log(json);
            result = json;
          },
          async:false
        });
        return result;
    }
    

    var positionsSource = {
      localdata: getGridData(),
      datafields: [
        { name: 'symbol', type: 'string', },
        { name: 'type', type: 'string', },
        { name: 'direction', type: 'string', },
        { name: 'base_size', type: 'number' },
        { name: 'quote_size', type: 'number' },
        { name: 'usd_size', type: 'number' },
        { name: 'entry_price', type: 'number' },
        { name: 'current_price', type: 'number' },
        { name: 'liquidation_price', type: 'number' },
        { name: 'entry_value', type: 'number' },
        { name: 'current_value', type: 'number' },
        { name: 'pnl', type: 'number' },
        { name: 'actions', type: 'string', },
      ],
      datatype: "json"
    };

    var positionsAdapter = new $.jqx.dataAdapter(positionsSource);

    var gridheight = $(window).height() - 450;
    if (gridheight < 326) gridheight = 326;


    $("#positionsgrid").jqxGrid({
      width: 1044,
      height: gridheight,
      source: positionsAdapter,
      columnsresize: true,
      filterable: true,
      sortable: true,
      showaggregates: true,
      showstatusbar: true,
      columnsheight: 20,
      rowsheight: 20,
      theme: 'dark',
      columns: [
        { text: 'Symbol', datafield: 'symbol', filtertype: 'checkedlist', width: 'auto' },
        { text: 'Type', datafield: 'type', filtertype: 'checkedlist', width: 75 },
        { text: 'Direction', datafield: 'direction', width: 80, cellclassname: function(row, column, value, data) { return data.direction == "short" ? "red" : "green" }  },
        { text: 'Base Size', datafield: 'base_size', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'd4', cellclassname: function(row, column, value, data) { return data.direction == "short" ? "red" : "green" } },
        { text: 'Quote Size', datafield: 'quote_size', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'd4', cellclassname: function(row, column, value, data) { return data.direction == "short" ? "red" : "green" } },
        { text: 'USD Size', datafield: 'usd_size', width: 100, align: 'right', cellsalign: 'right', aggregates: ['sum'], aggregatesrenderer: function (aggregates) { var renderstring = ""; $.each(aggregates, function (key, value) { renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><b>Total Size:</b><br /><font>' + value +'</div>'; }); return renderstring; }, cellsformat: 'c2', cellclassname: function(row, column, value, data) { return data.direction == "short" ? "red" : "green" } },
        { text: 'Entry Price', datafield: 'entry_price', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'd4' },
        { text: 'Mark Price', datafield: 'current_price', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'd4' },
        { text: 'Est Liq Price', datafield: 'liquidation_price', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'd4' },
        //{ text: 'Current Value ($)', datafield: 'usd_size', width: 100, align: 'right', cellsalign: 'right', cellsformat: 'c2', cellclassname: function(row, column, value, data) { return data.pnl < 0 ? "red" : "green" }, aggregates: ['sum'] },
        { text: 'PNL', datafield: 'pnl', width: 100, align: 'right', aggregates: ['sum'], aggregatesrenderer: function (aggregates) { var renderstring = ""; $.each(aggregates, function (key, value) { renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><b>Total PNL:</b><br /><font class="' + ((value.replace('$','') * 1) < 0 ? 'red' : 'green') + '">' + value +'</div>'; }); return renderstring; }, cellsalign: 'right', cellsformat: 'c2', cellclassname: function(row, column, value, data) { return value < 0 ? "red" : "green" }, aggregates: ['sum'] },
        { text: 'Actions', datafield: 'actions', align: 'center', cellsalign: 'center', width: 75 },
      ]
    });

    function refreshGrid() {
      //console.log('refresh');
      positionsSource.localdata = getGridData();
      $("#positionsgrid").jqxGrid('updatebounddata');
      //setTimeout(refreshGrid, 10000);
    }  
    //setTimeout( refreshGrid, 10000);

    function closePosition(stub, symbol) {
      api('trade:close', { stub: stub, symbol: symbol }, function(json) {
        if (json.result == "success") {
          showSuccess(symbol + ' position closed successfully');
          refreshGrid();
        } else {
          showFail('Failed to close position on ' + symbol)
        }
      });            
    }

    $('.closepositionlink').on('click', function() {
      var stub = $(this).attr('data-stub');
      var symbol = $(this).attr('data-symbol');
      if (confirm("Are you sure you wish to close your " + symbol + " position?")) {
        closePosition(stub, symbol)
      }
    });


  });
  
</script>