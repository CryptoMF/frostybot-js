
<div class="row flex-nowrap" style="margin: 0px; overflow: hidden;">
  <div id="grid_signaladmin_volume" style="width: 450px; min-height: 615px; margin: 0px; padding: 0px;"></div>
  <div style="width: 700px; min-height: 615px; max-height: 615px; text-align: center">
    <div id="chart_signaladmin_volume" style="min-height: 615px; padding: 0px; margin: 0px;"></div>
  </div>
</div>
          
<style type="text/css">
  .red   { color: #BB0000; }
  .green { color: #008800; }
</style>

<!--div id="positionsgrid" style="margin-bottom: 10px;"></div-->
<script src="/scripts/notifications.js"></script>
<script src="/scripts/api.js"></script>

<script type="text/javascript">
  
    $(document).ready(function () {

      const SMA = 7;
      const DAYS = 30;
      
      var panelheight = $(window).height() - 320;
      if (panelheight < 300) panelheight = 300;

      var gridheight = panelheight - 35;

      if (localStorage) {
        var token = localStorage.getItem("token");
        if (token != null) {
          var token = JSON.parse(token);
        }
      }

      // Get Volume Grid Data

      var volumeSource = {
        url: '/ui/data/griddata_signaladmin_volume',
        data: {
          token: token,
          sma: SMA,
          days: DAYS
        },
        datafields: [
          { name: 'date', type: 'date', },
          { name: 'volume', type: 'number', },
          { name: 'avg', type: 'number', },
        ],
        datatype: "json"
      };
  
      var volumeAdapter = new $.jqx.dataAdapter(volumeSource);

      // Exchange Renderer

      function exchange_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        switch (value) {
          case 'binance_spot'    : var name = 'Binance (S)'; break;
          case 'binance_margin'  : var name = 'Binance (M)'; break;
          case 'binance_futures' : var name = 'Binance (F)'; break;
          case 'binance_coinm'   : var name = 'Binance (C)'; break;
          case 'binanceus'       : var name = 'Binance.us'; break;
          case 'ftx'             : var name = 'FTX.com'; break;
          case 'ftxus'           : var name = 'FTX.us'; break;
          case 'deribit'         : var name = 'Deribit'; break;
          case 'bitmex'          : var name = 'Bitmex'; break;
          default                : var name = value; break;
        }
        return '<font style="margin: 5px;">' + name + '</font>'
      }

      // Symbol Renderer

      function symbol_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        var name = String(value).toUpperCase().replace('/','').replace('-','')
        return '<font style="margin: 5px;">' + name + '</font>'
      }

      // Aggregate Currency Renderer

      function currency_total(aggregates) {
        var renderstring = ""; 
        $.each(aggregates, function (key, value) { 
          var number = String(value).replace('$','').replace(/,/g, '').replace(/ /g, '');
          renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><font class="' + (number < 0 ? 'red' : 'green') + '"><b>' + value +'</b></font></div>'; 
        }); 
        return renderstring; 
      }

      // Aggregate Number Renderer

      function number_total(aggregates) {
        var renderstring = ""; 
        $.each(aggregates, function (key, value) { 
          renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><font><b>' + value +'</b></font></div>'; 
        }); 
        return renderstring; 
      }

      // Currency Class

      function currency_class(row, column, value, data) {
        var number = String(value).replace('$','').replace(/,/g, '').replace(/ /g, '');
        return number < 0 ? "red" : "green"
      }

      // Volume Grid

      $("#grid_signaladmin_volume").jqxGrid({
        width: 255,
        height: 615,
        autoshowloadelement: false,
        source: volumeSource,
        columnsresize: true,
        filterable: true,
        sortable: true,
        showaggregates: true,
        showstatusbar: false,
        //statusbarheight: 23,
        columnsheight: 20,
        rowsheight: 20,
        theme: 'dark',
        enablehover: false,
        selectionmode: 'none',
        ready: function () {
          refresh_volume_chart();
        },
        columns: [
          { text: 'Date', datafield: 'date', filtertype: 'range', width: 'auto', cellsformat: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027" },
         // { text: 'Volume ($)', datafield: 'volume', width: 135, align: 'right', cellsalign: 'right', cellsformat: 'c2', aggregatesrenderer: currency_total, cellsalign: 'right', cellclassname: currency_class, aggregates: ['sum'] },
          { text: SMA + '-Day Avg ($)', datafield: 'avg', width: 135, align: 'right', cellsalign: 'right', cellsformat: 'c2', aggregatesrenderer: currency_total, cellsalign: 'right', cellclassname: currency_class },
          //{ text: 'PNL ($)', datafield: 'pnl', width: 135, align: 'right', cellsalign: 'right', cellsformat: 'c2', aggregatesrenderer: currency_total, cellsalign: 'right', cellclassname: currency_class, aggregates: ['sum']},
          //{ text: 'Actions', datafield: 'actions', width: 90, align: 'center', cellsalign: 'center' }, 
        ]
      });

      var rows = $("#grid_signaladmin_volume").jqxGrid('getrows');

      // Customer Exposure Chart
      $('#chart_signaladmin_volume').jqxChart({
        title: "Average Daily Volume",
        description: SMA+"-Day Simple Moving Average (Last " + DAYS + " Days)",
        enableAnimations: true,
        padding: { left: 5, top: 5, right: 5, bottom: 5 },
        source: rows,
        colorScheme: 'scheme02',
        borderLineColor: 'White',
        showLegend: false,
        xAxis: {
          dataField: 'date',
          type: 'date',
          baseUnit: 'day',
          //unitInterval: 3,
          //tickMarks: {
          //    visible: true,
          //    interval: 1
          //},
          gridLines: {
              visible: false,
          //    interval: 1
          },
          //valuesOnTicks: true,
          labels: {
            formatFunction: function (value) {
              var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
              return value.getDate() + '-' + months[value.getMonth()];
            },
          },
          toolTipFormatFunction: function (value) {
              var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
              return value.getDate() + '-' + months[value.getMonth()] + '-' + value.getFullYear();
          },
        },
        valueAxis: {
            //unitInterval: 500,
            //minValue: 0,
            //maxValue: 4500,
            title: {text: 'Daily Volume ($)'}
        },
        colorScheme: 'scheme02',
        seriesGroups: [
          {
            type: 'stackedarea',
            series: [
              { dataField: 'avg', displayText: 'Volume ($)' },
//                                    { dataField: 'SearchPaid', displayText: 'Mobile Search' },
//                                    { dataField: 'Referral', displayText: 'Social media' }
            ]
          }
        ]
      });

      // Update Chart

      function refresh_volume_chart() {
        var rows = $("#grid_signaladmin_volume").jqxGrid('getrows');
        var chart = $('#chart_signaladmin_volume').jqxChart('getInstance');
        chart.source = rows;
        chart.update();
      }

      refresh_volume_chart();

      // Link Chart to Grid

      $("#grid_signaladmin_volume").on('filter', function () {
        refresh_volume_chart();
      });

    });

</script>