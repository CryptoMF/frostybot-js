
<div class="row flex-nowrap" style="margin: 0px; overflow: hidden;">
  <div id="grid_signaladmin_history" style="min-height: 300px; margin: 0px; padding: 0px;"></div>
</div>
<div class="row flex-nowrap" style="margin: 0px; height: 300px; overflow: hidden;">
  <div id="logtail" style="overflow-x: scroll; overflow-y: scroll; height: 300px; background-color: #000000; font-family: courier, 'courier new', monospace; font-size: 10pt; white-space: nowrap;"></div>
</div>
        
<style type="text/css">
  .red   { color: #BB0000; }
  .green { color: #008800; }
</style>

<!--div id="positionsgrid" style="margin-bottom: 10px;"></div-->
<script src="/scripts/notifications.js"></script>
<script src="/scripts/api.js"></script>

<script type="text/javascript">
  
    $(document).ready(function () {
      
      var panelheight = $(window).height() - 320;
      if (panelheight < 300) panelheight = 300;

      var gridheight = panelheight - 35;

      if (localStorage) {
        var token = localStorage.getItem("token");
        if (token != null) {
          var token = JSON.parse(token);
        }
      }

      // Get Signal History Grid Data

      var historySource = {
        url: '/ui/data/griddata_signaladmin_history',
        data: {
          token: token
        },
        datafields: [
          { name: 'signaluid', type: 'number', },
          { name: 'timestamp', type: 'date', },
          { name: 'user', type: 'string', },
          { name: 'email', type: 'string', },
          { name: 'stub', type: 'string', },
          { name: 'exchange', type: 'string', },
          { name: 'symbol', type: 'string', },
          { name: 'signal', type: 'string', },
          { name: 'result', type: 'string', },
          { name: 'message', type: 'string', },

          /*
          { name: 'qty', type: 'number' },
          { name: 'total', type: 'number' },
          { name: 'pnl', type: 'number' },
          { name: 'actions', type: 'string' },*/
        ],
        datatype: "json",
        pagesize: 10,
      };
  
      var historyAdapter = new $.jqx.dataAdapter(historySource);

      // Exchange Renderer

      function exchange_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        switch (value) {
          case 'binance_spot'    : var name = 'Binance (S)'; break;
          case 'binance_margin'  : var name = 'Binance (M)'; break;
          case 'binance_futures' : var name = 'Binance (F)'; break;
          case 'binance_coinm'   : var name = 'Binance (C)'; break;
          case 'binanceus'       : var name = 'Binance.us'; break;
          case 'ftx'             : var name = 'FTX.com'; break;
          case 'ftxus'           : var name = 'FTX.us'; break;
          case 'deribit'         : var name = 'Deribit'; break;
          case 'bitmex'          : var name = 'Bitmex'; break;
          default                : var name = value; break;
        }
        return '<font style="margin: 5px;">' + name + '</font>'
      }

      // Symbol Renderer

      function symbol_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        var name = String(value).toUpperCase().replace('/','').replace('-','')
        return '<font style="margin: 5px;">' + name + '</font>'
      }

      // Result Renderer

      function result_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        if (value == "Success")
          return '<font style="margin: 5px;" class="green">Success</font>'
        else 
          return '<font style="margin: 5px;" class="red">Error</font>'
      }

      // Message Renderer

      function message_renderer(row, columnfield, value, defaulthtml, columnproperties) {
        return '<font style="margin: 5px; " class="might-overflow" data-toggle="tooltip" data-placement="bottom" title="' + value + '">' + value + '</font>'
      }

      // Aggregate Currency Renderer

      function currency_total(aggregates) {
        var renderstring = ""; 
        $.each(aggregates, function (key, value) { 
          var number = String(value).replace('$','').replace(/,/g, '').replace(/ /g, '');
          renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><font class="' + (number < 0 ? 'red' : 'green') + '"><b>' + value +'</b></font></div>'; 
        }); 
        return renderstring; 
      }

      // Aggregate Number Renderer

      function number_total(aggregates) {
        var renderstring = ""; 
        $.each(aggregates, function (key, value) { 
          renderstring += '<div style="position: relative; margin: 4px; overflow: hidden;"><font><b>' + value +'</b></font></div>'; 
        }); 
        return renderstring; 
      }

      // Result Class

      function result_class(row, column, value, data) {
        return (value == 'Success' ? 'green' : 'red');
      }

      // Currency Class

      function currency_class(row, column, value, data) {
        var number = String(value).replace('$','').replace(/,/g, '').replace(/ /g, '');
        return number < 0 ? "red" : "green"
      }

      // Signal History Grid

      $("#grid_signaladmin_history").jqxGrid({
        width: '100%',
        height: 300,
        autoshowloadelement: false,
        source: historySource,
        columnsresize: true,
        filterable: true,
        sortable: true,
        showaggregates: false,
        showstatusbar: false,
        columnsheight: 20,
        rowsheight: 20,
        theme: 'dark',
        showemptyrow: false,
        ready: function () {
          getLogForRow(0)
        },
        columns: [
          //{ text: 'UID', datafield: 'signaluid', filtertype: 'checkedlist', width: 40 },
          { text: 'Date/Time', datafield: 'timestamp', width: 165, filtertype: 'date', cellsformat: "yyyy\u0027-\u0027MM\u0027-\u0027dd\u0027 \u0027HH\u0027:\u0027mm\u0027:\u0027ss" },
          { text: 'User', datafield: 'email', filtertype: 'checkedlist', width: 200 },
          { text: 'Stub', datafield: 'stub', filtertype: 'checkedlist', width: 80 },
          //{ text: 'Exchange', datafield: 'exchange', filtertype: 'checkedlist', width: 120, cellsrenderer: exchange_renderer },
          { text: 'Symbol', datafield: 'symbol', filtertype: 'checkedlist', width: 100, cellsrenderer: symbol_renderer },
          { text: 'Signal', datafield: 'signal', filtertype: 'checkedlist', width: 90 },
          { text: 'Result', datafield: 'result', filtertype: 'checkedlist', width: 80, cellclassname: result_class },
          { text: 'Message', datafield: 'message', width: 500, cellsrenderer: message_renderer  },
          //{ text: 'Actions', datafield: 'actions', width: 90, align: 'center', cellsalign: 'center' }, 
        ]
      });

      // Log Viewer

      $("#logtail").jqxPanel({ height: 320, width: '100%', sizeMode: 'fixed', autoUpdate: true, scrollBarSize: 20});

      // Get Log Tail

      function setLogData(data) {
        var content = '<p style="padding: 5px;">';
        var colors = {
          error: '#FF0000',
          warning: '#FFFF00',
          success: '#00FF00',
          debug: '#AAAAFF',
          notice: '#EEEEEE'
        };
        var colorkeys = Object.keys(colors);
        for (var i = 0; i < data.length; i++) {
          var entry = data[i];
          var timestamp = entry.timestamp;
          var type = entry.type;
          var message = entry.message;
          var line = [timestamp, type.padEnd(7, ' '), message].join(' â”‚ ')
          var addContent = '';
          for (var j = 0; j < colorkeys.length; j++) {
            var key = colorkeys[j];
            var color = colors[key];
            if (line.toLowerCase().indexOf(key.toLowerCase()) != -1) {
              addContent = '<font color="' + color + '">' + line.replace(/\ \ /g,'&nbsp;&nbsp;') + '</font><br />';
            }
          }
          if (addContent == '') 
            addContent = '<font color="white">' + line.replace(/\ \ /g,'&nbsp;&nbsp;') + '</font><br />';
          content += addContent;
        }; 
        content += '</p>';
        $("#logtail").html(content);
      }

      function getLogTail(user, timestamp) {
        var ts = (new Date(timestamp)).getTime() - (1000 * 60 * 5);
        var token = null;
        if (localStorage) {
          var token = localStorage.getItem("token");
          if (token != null) {
            var params = {
              token: JSON.parse(token),
              user: user,
              ts: ts,
            };
            //setLogData([]);
            jQuery.getJSON({
              url: "/ui/data/logtail",
              data: params,
              success: function(result) {
                setLogData(result);
                var d = $('#logtail');
                d.scrollTop(0);
              }
            });
          }
        }
      }

      function getSignalLogs(uid, user, timestamp) {
        var ts = (new Date(timestamp)).getTime() - (1000 * 60 * 5);
        var token = null;
        if (localStorage) {
          var token = localStorage.getItem("token");
          if (token != null) {
            var params = {
              token: JSON.parse(token),
              uid: uid,
              user: user,
              ts: ts,
            };
            //setLogData([]);
            jQuery.getJSON({
              url: "/ui/data/signallogs",
              data: params,
              success: function(result) {
                setLogData(result);
                var d = $('#logtail');
                d.scrollTop(0);
              }
            });
          }
        }
      }

      function getLogForRow(rowindex) {
        var data = $('#grid_signaladmin_history').jqxGrid('getrowdata', rowindex);
        var uid = data.signaluid;
        var timestamp = (new Date(data.timestamp)).getTime();
        var user = data.user;
        //alert(JSON.stringify([uid, timestamp, user]))
        getSignalLogs(uid, user, timestamp)
      }

      $("#grid_signaladmin_history").on("cellclick", function (event) {
        var args = event.args;
        var datafield = args.datafield;
        var rowindex = args.rowindex;
        getLogForRow(rowindex)
      });

    });

</script>